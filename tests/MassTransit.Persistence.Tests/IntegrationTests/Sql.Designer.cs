//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MassTransit.Persistence.Tests.IntegrationTests {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Sql {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Sql() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MassTransit.Persistence.Tests.IntegrationTests.Sql", typeof(Sql).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE `JobAttempts` (
        ///    `CorrelationId` BINARY(16) NOT NULL,
        ///    `CurrentState` INT NOT NULL,
        ///    `JobId` CHAR(36) NOT NULL,    
        ///    `Started` DATETIME NULL,
        ///    `Faulted` DATETIME NULL,
        ///    `StatusCheckTokenId` CHAR(36) NULL,    
        ///    `RetryAttempt` INT NOT NULL,
        ///    `ServiceAddress` VARCHAR(1000) NULL,
        ///    `InstanceAddress` VARCHAR(1000) NULL,
        ///    PRIMARY KEY (`CorrelationId`)
        ///) ENGINE=InnoDB;
        ///
        ///CREATE TABLE `JobTypes` (
        ///    `CorrelationId` BINARY(16) NOT NULL,
        ///    `Name` VARCHAR(255 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MySql_CreateJobTables {
            get {
                return ResourceManager.GetString("MySql_CreateJobTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE `MessageData` (
        ///    `Id` BINARY(16) NOT NULL PRIMARY KEY,
        ///    `Created` DATETIME NOT NULL,
        ///    `Expires` DATETIME NOT NULL,
        ///    `Data` LONGBLOB NOT NULL
        ///) ENGINE=InnoDB;.
        /// </summary>
        internal static string MySql_CreateMessageDataTables {
            get {
                return ResourceManager.GetString("MySql_CreateMessageDataTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE OptimisticSagas (
        ///    `CorrelationId` BINARY(16) NOT NULL,
        ///    `RowVersion` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        ///    `CurrentState` VARCHAR(20),
        ///    `Name` TEXT,
        ///    
        ///    PRIMARY KEY (`CorrelationId`)
        ///);
        ///
        ///CREATE TABLE `PessimisticSagas` (
        ///    `CorrelationId` BINARY(16) NOT NULL,
        ///    `CurrentState` VARCHAR(20),
        ///    `Name` TEXT,
        ///    
        ///    PRIMARY KEY (`CorrelationId`)
        ///);.
        /// </summary>
        internal static string MySql_CreateSagaTables {
            get {
                return ResourceManager.GetString("MySql_CreateSagaTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TABLE IF EXISTS Jobs;
        ///DROP TABLE IF EXISTS JobTypes;
        ///DROP TABLE IF EXISTS JobAttempts;.
        /// </summary>
        internal static string MySql_DropJobTables {
            get {
                return ResourceManager.GetString("MySql_DropJobTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TABLE IF EXISTS MessageData;.
        /// </summary>
        internal static string MySql_DropMessageDataTables {
            get {
                return ResourceManager.GetString("MySql_DropMessageDataTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TABLE IF EXISTS OptimisticSagas;
        ///DROP TABLE IF EXISTS PessimisticSagas;.
        /// </summary>
        internal static string MySql_DropSagaTables {
            get {
                return ResourceManager.GetString("MySql_DropSagaTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE IF NOT EXISTS JobAttempts (
        ///    CorrelationId UUID NOT NULL,
        ///    CurrentState INTEGER NOT NULL,
        ///    JobId UUID NOT NULL,    
        ///    Started TIMESTAMP NULL,
        ///    Faulted TIMESTAMP NULL,
        ///    StatusCheckTokenId UUID NULL,    
        ///    RetryAttempt INTEGER NOT NULL,
        ///    ServiceAddress VARCHAR(1000) NULL,
        ///    InstanceAddress VARCHAR(1000) NULL,
        ///    PRIMARY KEY (CorrelationId)
        ///);
        ///
        ///CREATE TABLE IF NOT EXISTS JobTypes (
        ///    CorrelationId UUID NOT NULL,
        ///    Name VARCHAR(255) NOT NULL,
        ///    Current [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Postgres_CreateJobTables {
            get {
                return ResourceManager.GetString("Postgres_CreateJobTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE MessageData (
        ///    Id UUID NOT NULL PRIMARY KEY,
        ///    Created TIMESTAMP NOT NULL,
        ///    Expires TIMESTAMP NOT NULL,
        ///    Data BYTEA NOT NULL
        ///);.
        /// </summary>
        internal static string Postgres_CreateMessageDataTables {
            get {
                return ResourceManager.GetString("Postgres_CreateMessageDataTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE IF NOT EXISTS OptimisticSagas (
        ///    CorrelationId UUID NOT NULL,
        ///    CurrentState VARCHAR(20),
        ///    Name TEXT,
        ///    
        ///    PRIMARY KEY (CorrelationId)
        ///);
        ///
        ///CREATE TABLE IF NOT EXISTS PessimisticSagas (
        ///    CorrelationId UUID NOT NULL,
        ///    CurrentState VARCHAR(20),
        ///    Name TEXT,
        ///    
        ///    PRIMARY KEY (CorrelationId)
        ///);.
        /// </summary>
        internal static string Postgres_CreateSagaTables {
            get {
                return ResourceManager.GetString("Postgres_CreateSagaTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TABLE IF EXISTS Jobs, JobAttempts, JobTypes;.
        /// </summary>
        internal static string Postgres_DropJobTables {
            get {
                return ResourceManager.GetString("Postgres_DropJobTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TABLE IF EXISTS MessageData CASCADE;.
        /// </summary>
        internal static string Postgres_DropMessageDataTables {
            get {
                return ResourceManager.GetString("Postgres_DropMessageDataTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TABLE IF EXISTS OptimisticSagas, PessimisticSagas;.
        /// </summary>
        internal static string Postgres_DropSagaTables {
            get {
                return ResourceManager.GetString("Postgres_DropSagaTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE [dbo].[Jobs] (
        ///    [CorrelationId] UNIQUEIDENTIFIER NOT NULL,
        ///    [CurrentState] INT NOT NULL,    
        ///    [Completed] DATETIME NULL,
        ///    [Faulted] DATETIME NULL,
        ///    [Started] DATETIME NULL,
        ///    [Submitted] DATETIME NULL,    
        ///    [EndDate] DATETIMEOFFSET NULL,
        ///    [NextStartDate] DATETIMEOFFSET NULL,
        ///    [StartDate] DATETIMEOFFSET NULL,    
        ///    [AttemptId] UNIQUEIDENTIFIER NOT NULL,
        ///    [JobTypeId] UNIQUEIDENTIFIER NOT NULL,
        ///    [JobRetryDelayToken] UNIQUEIDENTIFIER NULL,
        ///    [JobSlot [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SqlServer_CreateJobTables {
            get {
                return ResourceManager.GetString("SqlServer_CreateJobTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE [MessageData] (
        ///    [Id] UNIQUEIDENTIFIER NOT NULL PRIMARY KEY,
        ///    [Created] DATETIMEOFFSET NOT NULL,
        ///    [Expires] DATETIMEOFFSET NOT NULL,
        ///    [Data] VARBINARY(MAX) NOT NULL
        ///);.
        /// </summary>
        internal static string SqlServer_CreateMessageDataTables {
            get {
                return ResourceManager.GetString("SqlServer_CreateMessageDataTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE [dbo].[OptimisticSagas] (
        ///    [CorrelationId] UNIQUEIDENTIFIER NOT NULL,
        ///    [RowVersion] ROWVERSION,
        ///    [CurrentState] VARCHAR(20),
        ///
        ///    [Name] NVARCHAR(MAX),
        ///    
        ///    PRIMARY KEY CLUSTERED ([CorrelationId])
        ///);
        ///
        ///CREATE TABLE [dbo].[PessimisticSagas] (
        ///    [CorrelationId] UNIQUEIDENTIFIER NOT NULL,
        ///    [CurrentState] VARCHAR(20),
        ///
        ///    [Name] NVARCHAR(MAX),
        ///    
        ///    PRIMARY KEY CLUSTERED ([CorrelationId])
        ///);.
        /// </summary>
        internal static string SqlServer_CreateSagaTables {
            get {
                return ResourceManager.GetString("SqlServer_CreateSagaTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TABLE IF EXISTS [dbo].[Jobs];
        ///DROP TABLE IF EXISTS [dbo].[JobAttempts];
        ///DROP TABLE IF EXISTS [dbo].[JobTypes];.
        /// </summary>
        internal static string SqlServer_DropJobTables {
            get {
                return ResourceManager.GetString("SqlServer_DropJobTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TABLE IF EXISTS MessageData;.
        /// </summary>
        internal static string SqlServer_DropMessageDataTables {
            get {
                return ResourceManager.GetString("SqlServer_DropMessageDataTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TABLE IF EXISTS [dbo].[OptimisticSagas];
        ///DROP TABLE IF EXISTS [dbo].[PessimisticSagas];.
        /// </summary>
        internal static string SqlServer_DropSagaTables {
            get {
                return ResourceManager.GetString("SqlServer_DropSagaTables", resourceCulture);
            }
        }
    }
}
